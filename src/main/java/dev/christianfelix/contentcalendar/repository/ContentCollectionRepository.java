package dev.christianfelix.contentcalendar.repository;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Repository;

import dev.christianfelix.contentcalendar.model.Content;
import dev.christianfelix.contentcalendar.model.Status;
import dev.christianfelix.contentcalendar.model.Type;
import jakarta.annotation.PostConstruct;

@Repository
public class ContentCollectionRepository {
	private final List<Content> contentList = new ArrayList<>();

	public ContentCollectionRepository() {

	}

	public List<Content> findAll() {
		return contentList;
	}

	/*
	 * Integer: The id parameter is of type Integer, which represents the ID of
	 * the Content object being searched for.
	 * 
	 * .equals(): The .equals() method is called on the Integer object obtained
	 * from c.id() to compare it with the id parameter. It checks for equality
	 * between the two values.
	 * 
	 * id: The id() method is a method generated by the Content record class. It
	 * returns the ID of a Content object. In this code, it is called on each
	 * Content object c to obtain its ID value, which is then compared to the id
	 * parameter using .equals().
	 */

	public Optional<Content> findById(Integer id) {
		return contentList.stream().filter(c -> c.id().equals(id)).findFirst();
	}

	
	/*
	 * PostConstruct methods are called right after all beans have been created
	 * and their dependencies have been injected.
	 */
	
	
	public void save(Content content) {
		contentList.add(content);
	}
	
	@PostConstruct
	private void init() {
		Content newContent = new Content(
				1,
				"My First Blog Post",
				"My first blog post",
				Status.IDEA,
				Type.ARTICLE,
				LocalDateTime.now(),
				null,
				"");
		
		contentList.add(newContent);
	}
}
